$date
	Wed Mar  8 19:22:11 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module writeback_tb $end
$var wire 4 ! dstM [3:0] $end
$var wire 4 " dstE [3:0] $end
$var reg 1 # clk $end
$var reg 1 $ cnd $end
$var reg 4 % icode [3:0] $end
$var reg 4 & rA [3:0] $end
$var reg 4 ' rB [3:0] $end
$var reg 64 ( valA [63:0] $end
$var reg 64 ) valB [63:0] $end
$var reg 64 * valE [63:0] $end
$var reg 64 + valM [63:0] $end
$scope module DUT $end
$var wire 1 # clk $end
$var wire 1 $ cnd $end
$var wire 4 , icode [3:0] $end
$var wire 4 - rA [3:0] $end
$var wire 4 . rB [3:0] $end
$var wire 64 / valA [63:0] $end
$var wire 64 0 valB [63:0] $end
$var wire 64 1 valE [63:0] $end
$var wire 64 2 valM [63:0] $end
$var reg 4 3 dstE [3:0] $end
$var reg 4 4 dstM [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1111 4
b1111 3
bx 2
bx 1
bx 0
bx /
b10 .
b100 -
b10 ,
bx +
bx *
bx )
bx (
b10 '
b100 &
b10 %
1$
0#
b1111 "
b1111 !
$end
#10
b10 "
b10 3
1#
#20
b110 '
b110 .
b101 &
b101 -
b11 %
b11 ,
0#
#30
b110 "
b110 3
1#
#40
b111 '
b111 .
b10 &
b10 -
b101 %
b101 ,
0#
#50
b10 !
b10 4
1#
#60
b10 '
b10 .
b110 &
b110 -
b1010 %
b1010 ,
0#
#70
b100 "
b100 3
1#
#80
b100 '
b100 .
b111 &
b111 -
b1011 %
b1011 ,
0#
#90
b111 !
b111 4
1#
#100
b101 '
b101 .
b10 &
b10 -
b1000 %
b1000 ,
0#
#110
1#
#120
0#
